#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2024 Celestica Inc. All Rights Reserved.
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for bgp_af_neighbor
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: bgp_af_neighbor
version_added: 1.0.0
short_description: Resource module to configure BGP address family neighbor.
description:
  - This module configures and manages BGP address family neighbor on devices running Celestica SONiC NOS.
author: Celestica SONiC Ansible Team (@dharmaraj-gurusamy)
notes:
  - Tested against Advanced Celestica SONiC, release 2.0.
  - This module works with connection C(network_cli).
options:
  config:
    description:
      - A dictionary of BGP address family neighbor configurations.
    type: dict
    suboptions:
      # BGP neighbor config
      bgp:
        description:
          - BGP configuration
        type: list
        elements: dict
        suboptions:
          asn:
            description:
              - ASN number. Range is 1-4294967295.
            type: str
            required: true
          vrf:
            description:
              - VRF name, shall be prefixed with 'Vrf' pattern. Maximum of 15 characters.
            type: str
          view:
            description:
              - View name.
            type: str
          address-family:
            description:
              - BGP address family configuration
            type: list
            elements: dict
            suboptions:
              afi:
                description:
                  - Address family type
                type: str
                choices: [ipv4, ipv6, l2vpn]
                required: true
              safi:
                description:
                  - Subsequent address family type
                type: str
                choices: [unicast, evpn]
                required: true
              neighbor:
                description:
                  - BGP address family neighbor configuration
                type: list
                elements: dict
                suboptions:
                  id:
                    description:
                      - Neighbor identifier
                      - Name, Interface name and IPv4 address are allowed.
                    type: str
                    required: true
                  activate:
                    description:
                      - Enable the address family for this neighbor.
                    type: bool
                  addpath-tx-all-paths:
                    description:
                      - Option to specify using addpath to advertise all paths to a neighbor.
                    type: bool
                  addpath-tx-bestpath-per-as:
                    description:
                      - Option to specify using addpath to advertise the bestpath per each neighboring AS.
                    type: bool
                  allowas-in:
                    description:
                      - Accept as-path with my AS present in it.
                    type: bool
                  allowas-in-asn:
                    description:
                      - Accept as-path with my AS present in it.
                      - Number of occurences of AS number, Range is 1-10
                    type: int
                  allowas-in-origin:
                    description:
                      - Only accept my AS in the as-path if the route was originated in my AS.
                    type: bool
                  as-override:
                    description:
                      - Override ASNs in outbound updates if aspath equals remote-as.
                    type: bool
                  attribute-unchanged:
                    description:
                      - BGP attribute is propagated unchanged to this neighbor.
                      - Leave the as-path attribute unchanged in advertisement to this neighbor.
                    type: bool
                  attribute-unchanged-type:
                    description:
                      - Leave the as-path / med / next-hop attribute unchanged in advertisement to this neighbor.
                    type: str
                    choices: [as-path, med, next-hop]
                  capability:
                    description:
                      - Advertise capability to the peer.
                    type: dict
                    suboptions:
                      orf:
                        description:
                          - Advertise ORF capability to the peer.
                        type: dict
                        suboptions:
                          prefix-list:
                            description:
                              - Advertise prefixlist ORF capability to this neighbor.
                            type: str
                            choices: [both, send, receive]
                  default-originate:
                    description:
                      - Originate default route to this neighbor.
                    type: bool
                  default-originate-route-map:
                    description:
                      - Route-map to specify criteria to originate default.
                    type: str
                  # distribute-list-ingress:
                  #   description:
                  #     - Filter updates in ingress direction, access-list number (both standard and extended) and access-list name are allowed.
                  #     - Access-list number (Standard range is 1-199, Extended range is 1300-2699).
                  #   type: str
                  # distribute-list-egress:
                  #   description:
                  #     - Filter updates in egress direction, access-list number (both standard and extended) and access-list name are allowed.
                  #     - Access-list number (Standard range is 1-199, Extended range is 1300-2699).
                  #   type: str
                  # filter-list-ingress:
                  #   description:
                  #     - Establish BGP filters in ingress direction with AS path access-list name.
                  #   type: str
                  # filter-list-egress:
                  #   description:
                  #     - Establish BGP filters in egress direction with AS path access-list name.
                  #   type: str
                  maximum-prefix:
                    description:
                      - Maximum number of prefix limit. Range is 1-4294967295.
                    type: int
                  maximum-prefix-threshold:
                    description:
                      - Threshold value (%) at which to generate a warning msg. Range is 1-100.
                    type: int
                  maximum-prefix-force:
                    description:
                      - Include ALL prefixes not just accepted (i.e, including filtered), into this limit.
                    type: bool
                  maximum-prefix-restart:
                    description:
                      - Restart bgp connection (in minutes) after threshold percentage limit is exceeded. Range is 1-65535.
                    type: int
                  maximum-prefix-warning-only:
                    description:
                      - Only give warning message when threshold percentage limit is exceeded.
                    type: bool
                  maximum-prefix-out:
                    description:
                      - Maximum number of prefixes to be sent to this peer. Range is 1-4294967295.
                    type: int
                  next-hop-self:
                    description:
                      - Disable the next hop calculation for this neighbor.
                    type: bool
                  next-hop-self-force:
                    description:
                      - Set the next hop to self for reflected routes.
                    type: bool
                  # prefix-list-ingress:
                  #   description:
                  #     - Filter updates in ingress direction with prefix-list name.
                  #   type: str
                  # prefix-list-egress:
                  #   description:
                  #     - Filter updates in egress direction with prefix-list name.
                  #   type: str
                  remove-private-as:
                    description:
                      - Remove private ASNs in outbound updates.
                    type: bool
                  remove-private-as-all:
                    description:
                      - Remove all private ASNs in outbound updates.
                    type: bool
                  remove-private-as-replace-as:
                    description:
                      - Replace private ASNs with our ASN in outbound updates.
                    type: bool
                  # route-map-ingress:
                  #   description:
                  #     - BGP address family neighbor route-map configuration in ingress direction.
                  #   type: str
                  # route-map-egress:
                  #   description:
                  #     - BGP address family neighbor route-map configuration in egress direction.
                  #   type: str
                  route-reflector-client:
                    description:
                      - Configure a neighbor as route reflector client.
                    type: bool
                  route-server-client:
                    description:
                      - Configure a neighbor as route server client.
                    type: bool
                  send-community:
                    description:
                      - Send Community attribute to this neighbor.
                      - all indicates standard, large and extended community attributes.
                      - both indicates standard and extended community attributes.
                    type: str
                    choices: [all, both, extended, large, standard]
                  soft-reconfiguration:
                    description:
                      - Per neighbor soft reconfiguration.
                    type: dict
                    suboptions:
                      inbound:
                        description:
                          - Allow inbound soft reconfiguration for this neighbor.
                        type: bool
                  unsuppress-map:
                    description:
                      - Route-map to selectively unsuppress suppressed routes.
                    type: str
                  weight:
                    description:
                      - Set default weight for routes from this neighbor. Range is 0-65535.
                    type: int

  state:
    description:
      - The state of the configuration after module completion.
      - C(merged) - Merge specified configuration with on-device running configuration.
      - C(deleted) - Delete the specified on-device running configuration or applies the default value.
    type: str
    choices:
      - merged
      - deleted
    default: merged
"""
EXAMPLES = """
# Using state : merged
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config bgp
# !
# router bgp 1
#  neighbor peer1 peer-group
#  neighbor Ethernet0 interface peer-group peer1
#  neighbor Ethernet0 interface remote-as internal
#  neighbor 10.1.1.1 peer-group peer1
#  neighbor 20.1.1.1 remote-as internal
#  neighbor 20.1.1.1 peer-group peer1
#  neighbor 20::30 remote-as internal
#  neighbor 20::30 peer-group peer1
# exit
# !
# router bgp 1 vrf Vrf1
#  neighbor peer2 peer-group
#  neighbor Ethernet1 interface peer-group peer2
#  neighbor 10::20 peer-group peer2
#  neighbor Ethernet0 interface remote-as internal
# exit
# !
# router bgp 1 view view1
#  neighbor neighbor_tag1 peer-group
#  neighbor neighbor_tag1 remote-as internal
# exit
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Merge BGP Address Family Neighbor Configuration
      celestica.sonic.bgp_af_neighbor:
        config:
          bgp:
            - asn: 1
              address-family:
                - afi: ipv4
                  safi: unicast
                  neighbor:
                    - id: 10.1.1.1
                      addpath-tx-all-paths: true
                      as-override: true
                      attribute-unchanged: true
                      default-originate: true
                      default-originate-route-map: route_map1
                      next-hop-self: true
                      next-hop-self-force: true
                      remove-private-as: true
                      remove-private-as-all: true
                      route-server-client: true
                      unsuppress-map: route_map2
                      weight: 34
                    - id: Ethernet0
                      addpath-tx-bestpath-per-as: true
                      attribute-unchanged: true
                      attribute-unchanged-type: as-path
                      default-originate: true
                      maximum-prefix-out: 2
                      next-hop-self: true
                      remove-private-as: true
                      route-reflector-client: true
                      soft-reconfiguration:
                        inbound: true
                - afi: l2vpn
                  safi: evpn
                  neighbor:
                    - id: 20.1.1.1
                      activate: true
                      route-reflector-client: true
                    - id: 20::30
                      activate: true
                      route-reflector-client: true
            - asn: 1
              vrf: Vrf1
              address-family:
                - afi: ipv6
                  safi: unicast
                  neighbor:
                    - id: 10::20
                      activate: true
                    - id: Ethernet0
                      route-reflector-client: true
            - asn: 1
              view: view1
              address-family:
                - afi: ipv4
                  safi: unicast
                  neighbor:
                    - id: neighbor_tag1
                      route-reflector-client: true
        state: merged


# After state:
# ------------
#
# Celestica-DS1000# show running-config bgp
# !
# router bgp 1
#  neighbor peer1 peer-group
#  neighbor Ethernet0 interface peer-group peer1
#  neighbor Ethernet0 interface remote-as internal
#  neighbor 10.1.1.1 peer-group peer1
#  neighbor 20.1.1.1 remote-as internal
#  neighbor 20.1.1.1 peer-group peer1
#  neighbor 20::30 remote-as internal
#  neighbor 20::30 peer-group peer1
#  !
#  address-family ipv4 unicast
#   neighbor Ethernet0 addpath-tx-bestpath-per-AS
#   neighbor Ethernet0 route-reflector-client
#   neighbor Ethernet0 next-hop-self
#   neighbor Ethernet0 remove-private-AS
#   neighbor Ethernet0 default-originate
#   neighbor Ethernet0 soft-reconfiguration inbound
#   neighbor Ethernet0 maximum-prefix-out 2
#   neighbor Ethernet0 attribute-unchanged as-path
#   neighbor 10.1.1.1 addpath-tx-all-paths
#   neighbor 10.1.1.1 next-hop-self force
#   neighbor 10.1.1.1 remove-private-AS all
#   neighbor 10.1.1.1 as-override
#   neighbor 10.1.1.1 default-originate route-map route_map1
#   neighbor 10.1.1.1 route-server-client
#   neighbor 10.1.1.1 weight 34
#   neighbor 10.1.1.1 unsuppress-map route_map2
#   neighbor 10.1.1.1 attribute-unchanged as-path next-hop med
#  exit-address-family
#  !
#  address-family l2vpn evpn
#   neighbor 20.1.1.1 activate
#   neighbor 20.1.1.1 route-reflector-client
#   neighbor 20::30 activate
#   neighbor 20::30 route-reflector-client
#  exit-address-family
# exit
# !
# router bgp 1 vrf Vrf1
#  neighbor peer2 peer-group
#  neighbor Ethernet1 interface peer-group peer2
#  neighbor 10::20 peer-group peer2
#  neighbor Ethernet0 interface remote-as internal
#  !
#  address-family ipv6 unicast
#   neighbor 10::20 activate
#   neighbor Ethernet0 route-reflector-client
#  exit-address-family
# exit
# !
# router bgp 1 view view1
#  neighbor neighbor_tag1 peer-group
#  neighbor neighbor_tag1 remote-as internal
#  !
#  address-family ipv4 unicast
#   neighbor neighbor_tag1 route-reflector-client
#  exit-address-family
# exit
# Celestica-DS1000#


# Using state : deleted
#
# Before state:
# -------------
# Celestica-DS1000# show running-config bgp
# !
# router bgp 1
#  neighbor peer1 peer-group
#  neighbor Ethernet0 interface peer-group peer1
#  neighbor Ethernet0 interface remote-as internal
#  neighbor 10.1.1.1 peer-group peer1
#  neighbor 20.1.1.1 remote-as internal
#  neighbor 20.1.1.1 peer-group peer1
#  neighbor 20::30 remote-as internal
#  neighbor 20::30 peer-group peer1
#  !
#  address-family ipv4 unicast
#   neighbor Ethernet0 addpath-tx-bestpath-per-AS
#   neighbor Ethernet0 route-reflector-client
#   neighbor Ethernet0 next-hop-self
#   neighbor Ethernet0 remove-private-AS
#   neighbor Ethernet0 default-originate
#   neighbor Ethernet0 soft-reconfiguration inbound
#   neighbor Ethernet0 maximum-prefix-out 2
#   neighbor Ethernet0 attribute-unchanged as-path
#   neighbor 10.1.1.1 addpath-tx-all-paths
#   neighbor 10.1.1.1 next-hop-self force
#   neighbor 10.1.1.1 remove-private-AS all
#   neighbor 10.1.1.1 as-override
#   neighbor 10.1.1.1 default-originate route-map route_map1
#   neighbor 10.1.1.1 route-server-client
#   neighbor 10.1.1.1 weight 34
#   neighbor 10.1.1.1 unsuppress-map route_map2
#   neighbor 10.1.1.1 attribute-unchanged as-path next-hop med
#  exit-address-family
#  !
#  address-family l2vpn evpn
#   neighbor 20.1.1.1 activate
#   neighbor 20.1.1.1 route-reflector-client
#   neighbor 20::30 activate
#   neighbor 20::30 route-reflector-client
#  exit-address-family
# exit
# !
# router bgp 1 vrf Vrf1
#  neighbor peer2 peer-group
#  neighbor Ethernet1 interface peer-group peer2
#  neighbor 10::20 peer-group peer2
#  neighbor Ethernet0 interface remote-as internal
#  !
#  address-family ipv6 unicast
#   neighbor 10::20 activate
#   neighbor Ethernet0 route-reflector-client
#  exit-address-family
# exit
# !
# router bgp 1 view view1
#  neighbor neighbor_tag1 peer-group
#  neighbor neighbor_tag1 remote-as internal
#  !
#  address-family ipv4 unicast
#   neighbor neighbor_tag1 route-reflector-client
#  exit-address-family
# exit
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Delete BGP Address Family Neighbor Configuration
      celestica.sonic.bgp_af_neighbor:
        config:
          bgp:
            - asn: 1
              address-family:
                - afi: ipv4
                  safi: unicast
                  neighbor:
                    - id: 10.1.1.1
                      addpath-tx-all-paths: true
                      as-override: true
                      attribute-unchanged: true
                      default-originate: true
                      default-originate-route-map: route_map1
                      next-hop-self: true
                      next-hop-self-force: true
                      remove-private-as: true
                      remove-private-as-all: true
                      route-server-client: true
                      unsuppress-map: route_map2
                      weight: 34
                    - id: Ethernet0
                      addpath-tx-bestpath-per-as: true
                      attribute-unchanged: true
                      attribute-unchanged-type: as-path
                      default-originate: true
                      maximum-prefix-out: 2
                      next-hop-self: true
                      route-reflector-client: true
                - afi: l2vpn
                  safi: evpn
                  neighbor:
                    - id: 20.1.1.1
                      activate: true
                      route-reflector-client: true
                    - id: 20::30
                      activate: true
                      route-reflector-client: true
            - asn: 1
              vrf: Vrf1
              address-family:
                - afi: ipv6
                  safi: unicast
                  neighbor:
                    - id: 10::20
                      activate: true
                    - id: Ethernet0
                      route-reflector-client: true
            - asn: 1
              view: view1
        state: deleted


# After state:
# ------------
#
# Celestica-DS1000# show running-config bgp
# !
# router bgp 1
#  bgp deterministic-med
#  neighbor peer1 peer-group
#  neighbor Ethernet0 interface peer-group peer1
#  neighbor Ethernet0 interface remote-as internal
#  neighbor 10.1.1.1 peer-group peer1
#  neighbor 20.1.1.1 remote-as internal
#  neighbor 20.1.1.1 peer-group peer1
#  neighbor 20::30 remote-as internal
#  neighbor 20::30 peer-group peer1
#  !
#  address-family ipv4 unicast
#   neighbor Ethernet0 remove-private-AS
#   neighbor Ethernet0 soft-reconfiguration inbound
#  exit-address-family
# exit
# !
# router bgp 1 vrf Vrf1
#  neighbor peer2 peer-group
#  neighbor Ethernet1 interface peer-group peer2
#  neighbor 10::20 peer-group peer2
#  neighbor Ethernet0 interface remote-as internal
# exit
# Celestica-DS1000#


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.argspec.bgp_af_neighbor.bgp_af_neighbor import Bgp_af_neighborArgs
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.config.bgp_af_neighbor.bgp_af_neighbor import Bgp_af_neighbor


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Bgp_af_neighborArgs.argument_spec,
                           supports_check_mode=True)

    result = Bgp_af_neighbor(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
