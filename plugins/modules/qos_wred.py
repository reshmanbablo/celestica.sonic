#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2024 Celestica. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for qos_wred
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: qos_wred
version_added: '1.0.0'
short_description: Resource module to configure QoS WRED (Weighted Random Early Detection).
description:
  - This module configures and manages QoS WRED on devices running Celestica SONiC NOS.
author: Celestica SONiC Ansible Team (@dharmaraj-gurusamy)
notes:
  - Tested against Advanced Celestica SONiC, release 2.0.
  - This module works with connection C(network_cli).
options:
  config:
    description:
      - A dictionary of QoS WRED configurations.
    type: dict
    suboptions:
      # QoS WRED config
      wred-profile:
        description:
          - QoS WRED profile configurations.
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Name of the WRED profile. Maximum of 32 characters.
            type: str
            required: true
          random-detect:
            description:
              - Random detect configuration in WRED profile.
            type: dict
            suboptions:
              # Color configurations
              color:
                description:
                  - Random detect color configuration in WRED profile.
                type: list
                elements: dict
                suboptions:
                  id:
                    description:
                      - Color identifier.
                    type: str
                    choices: [green, red, yellow]
                    required: true
                  min-threshold:
                    description:
                      - Minimum threshold in bytes, Range is 1-67108608.
                    type: int
                  max-threshold:
                    description:
                      - Maximum threshold in bytes, Range is 1-67108608.
                    type: int
                  drop-probability:
                    description:
                      - The rate of drop precedence in percentage, Range is 0-100.
                    type: int

              # ECN configuration.
              ecn:
                description:
                  - ECN (Explicit Congestion Notification) for the WRED profile.
                type: str
                choices: [all, green, red, yellow, green-red, green-yellow, yellow-red, none]

      # QoS map config on interfaces
      interface:
        description:
          - QoS map configurations on interfaces.
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Full interface name, ie, Ethernet0.
              - Only Ethernet interfaces are allowed.
            type: str
            required: true
          profile:
            description:
              - WRED profile configuration on this interface.
            type: list
            elements: dict
            suboptions:
              queue:
                description:
                  - Queue identifier, Range is 0-7.
                type: int
                required: true
              name:
                description:
                  - WRED profile name. Maximum of 32 characters.
                type: str

  state:
    description:
      - The state of the configuration after module completion.
      - C(merged) - Merge specified configuration with on-device running configuration.
      - C(deleted) - Delete the specified on-device running configuration or applies the default value.
    type: str
    choices:
      - merged
      - deleted
    default: merged
"""
EXAMPLES = """
# Using state : merged
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config qos wred-profile
# !
# qos wred-profile wred1
#  random-detect color green min-threshold 2 max-threshold 3 drop-probability 5
#  random-detect ecn green
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Merge QoS Wred Configuration
      celestica.sonic.qos_wred:
        config:
          wred-profile:
            - name: wred1
              random-detect:
                color:
                  - id: red
                    min-threshold: 4
                    max-threshold: 5
                    drop-probability: 8
                  - id: yellow
                    min-threshold: 6
                    max-threshold: 9
                    drop-probability: 8
                ecn: all
            - name: wred2
              random-detect:
                color:
                  - id: red
                    min-threshold: 3
                    max-threshold: 8
                    drop-probability: 9

        state: merged


# After state:
# ------------
#
# Celestica-DS1000# show running-config qos wred-profile
# !
# qos wred-profile wred1
#  random-detect color green min-threshold 2 max-threshold 3 drop-probability 5
#  random-detect color red min-threshold 4 max-threshold 5 drop-probability 8
#  random-detect color yellow min-threshold 6 max-threshold 9 drop-probability 8
#  random-detect ecn all
# !
# qos wred-profile wred2
#  random-detect color red min-threshold 3 max-threshold 8 drop-probability 9
#  random-detect ecn none
# Celestica-DS1000#


# Using state : merged
#
# Before state:
# -------------
#
# Celestica-DS1000# show qos wred interface Ethernet all

# Ethernet0
#  queue:   1
#      wred_profile:  wred1
#
# Play:
# ----
#

    - name: Merge QoS Wred-Interface Configuration
      celestica.sonic.qos_wred:
        config:
          interface:
            - name: Ethernet0
              profile:
                - queue: 2
                  name: wred2
            - name: Ethernet1
              profile:
                - queue: 4
                  name: wred1
                - queue: 2
                  name: wred2

        state: merged


# After state:
# ------------
#
# Celestica-DS1000# show qos wred interface Ethernet all

# Ethernet0
#  queue:   1
#      wred_profile:  wred1
#  queue:   2
#      wred_profile:  wred2

# Ethernet1
#  queue:   2
#      wred_profile:  wred2
#  queue:   4
#      wred_profile:  wred1
# Celestica-DS1000#


# Using state : deleted
#
# Before state:
# -------------
# Celestica-DS1000# show running-config qos wred-profile
# !
# qos wred-profile wred1
#  random-detect color green min-threshold 2 max-threshold 3 drop-probability 5
#  random-detect color red min-threshold 4 max-threshold 5 drop-probability 8
#  random-detect color yellow min-threshold 6 max-threshold 9 drop-probability 8
#  random-detect ecn all
# !
# qos wred-profile wred2
#  random-detect color red min-threshold 3 max-threshold 8 drop-probability 9
#  random-detect ecn none
# Celestica-DS1000#
#
# Play:
# ----
#

    - name: Delete QoS Wred Configuration
      celestica.sonic.qos_wred:
        config:
          wred-profile:
            - name: wred1
              random-detect:
                color:
                  - id: green
                  - id: yellow
                ecn: all
            - name: wred2

        state: deleted


# After state:
# ------------
#
# Celestica-DS1000# show running-config qos wred-profile
# !
# qos wred-profile wred1
#  random-detect color red min-threshold 4 max-threshold 5 drop-probability 8
#  random-detect ecn none
# Celestica-DS1000#


# Using state : deleted
#
# Before state:
# -------------
# Celestica-DS1000# show qos wred interface Ethernet all

# Ethernet0
#  queue:   1
#      wred_profile:  wred1
#  queue:   2
#      wred_profile:  wred2

# Ethernet1
#  queue:   2
#      wred_profile:  wred2
#  queue:   4
#      wred_profile:  wred1
# Celestica-DS1000#
#
# Play:
# ----
#

    - name: Delete QoS Wred-Interface Configuration
      celestica.sonic.qos_wred:
        config:
          interface:
            - name: Ethernet0
              profile:
                - queue: 2
            - name: Ethernet1
              profile:
                - queue: 4
                - queue: 2
        state: deleted

# After state:
# ------------
#
# Celestica-DS1000# show qos wred interface Ethernet all

# Ethernet0
#  queue:   1
#      wred_profile:  wred1
# Celestica-DS1000#


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.argspec.qos_wred.qos_wred import Qos_wredArgs
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.config.qos_wred.qos_wred import Qos_wred


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Qos_wredArgs.argument_spec,
                           supports_check_mode=True)

    result = Qos_wred(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
