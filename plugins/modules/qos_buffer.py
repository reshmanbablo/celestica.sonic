#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2024 Celestica. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for qos_buffer
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: qos_buffer
version_added: '1.0.0'
short_description: Resource module to configure QoS buffer-profile.
description:
  - This module configures and manages QoS buffer-profile on devices running Celestica SONiC NOS.
author: Celestica SONiC Ansible Team (@dharmaraj-gurusamy)
notes:
  - Tested against Advanced Celestica SONiC, release 2.0.
  - This module works with connection C(network_cli).
options:
  config:
    description:
      - A dictionary of QoS buffer configurations.
    type: dict
    suboptions:
      # QoS buffer-mgmt config
      buffer-mgmt:
        description:
          - Enable or disable buffer configurations.
        type: bool

      # QoS egress buffer-profile config
      buffer-profile-egress:
        description:
          - QoS egress buffer profile configurations.
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Buffer profile name. Maximum of 63 characters.
            type: str
            required: true
          buffer-pool:
            description:
              - Buffer pool name.
            type: str
            choices: [egress_default_lossy_pool, egress_lossless_pool]
          dynamic-threshold:
            description:
              - Dynamic threshold configuration. Range is 0-65535.
            type: int
          static-threshold:
            description:
              - Static threshold configuration. Range is 0-65535.
            type: int
          size:
            description:
              - Buffer profile size. Range is 0-65535.
            type: int

      # QoS ingress buffer-profile config
      buffer-profile-ingress:
        description:
          - QoS ingress buffer profile configurations.
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Buffer profile name. Maximum of 63 characters.
            type: str
            required: true
          buffer-pool:
            description:
              - Buffer pool name.
            type: str
            choices: [ingress_default_lossy_pool, ingress_lossless_pool]
          dynamic-threshold:
            description:
              - Dynamic threshold configuration. Range is 0-65535.
            type: int
          static-threshold:
            description:
              - Static threshold configuration. Range is 0-65535.
            type: int
          size:
            description:
              - Buffer profile size. Range is 0-65535.
            type: int
          headroom:
            description:
              - Headroom buffer for the configured profile.
            type: int
          xon:
            description:
              - Resume thereshold. Range is 0-65535.
            type: int

      # QoS buffer profile config on interfaces
      interface:
        description:
          - QoS buffer profile configurations on interfaces.
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Full interface name, ie, Ethernet0.
              - Only Ethernet interfaces are allowed.
            type: str
            required: true

          # QoS buffer priority group profile config on interfaces
          priority-group-profile:
            description:
              - QoS buffer priority group profile configurations on interfaces.
            type: list
            elements: dict
            suboptions:
              name:
                description:
                  - Egress profile name. Maximum of 63 characters.
                type: str
                required: true
              group:
                description:
                  - Priority group identifer, Range is 0-7.
                type: int
                required: true

          # QoS buffer queue profile config on interfaces
          buffer-queue-profile:
            description:
              - QoS buffer queue profile configurations on interfaces.
            type: list
            elements: dict
            suboptions:
              name:
                description:
                  - Ingress profile name. Maximum of 63 characters.
                type: str
                required: true
              queue:
                description:
                  - Queue identifer, Range is 0-7.
                type: int
                required: true

          # QoS priority flow control config on interfaces
          priority-flow-control:
            description:
              - QoS priority flow control configurations on interfaces.
            type: list
            elements: dict
            suboptions:
              group:
                description:
                  - Priority group identifer, Range is 0-7.
                type: int
                required: true
              mode:
                description:
                  - Flow control mode.
                type: str
                choices: [enable, disable]
                required: true

  state:
    description:
      - The state of the configuration after module completion.
      - C(merged) - Merge specified configuration with on-device running configuration.
      - C(deleted) - Delete the specified on-device running configuration or applies the default value.
    type: str
    choices:
      - merged
      - deleted
    default: merged
"""
EXAMPLES = """
# Using state : merged
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config qos buffer-mgmt
# !
# qos buffer-mgmt enable
# Celestica-DS1000# show running-config qos buffer-profile
# !
# qos buffer-profile egress profile-name default_egress_profile buffer-pool egress_default_lossy_pool dynamic-threshold 1
# !
# qos buffer-profile ingress profile-name default_ingress_profile buffer-pool ingress_default_lossy_pool static-threshold 0 headroom 0 xon 0
# !
# qos buffer-profile egress profile-name egress3 buffer-pool egress_lossless_pool dynamic-threshold 5 size 13
# Celestica-DS1000#
#
# Play:
# ----
#

    - name: Merge QoS Buffer Configuration
      celestica.sonic.qos_buffer:
        config:
          buffer-mgmt: true
          buffer-profile-egress:
            - name: egress1
              buffer-pool: egress_default_lossy_pool
              dynamic-threshold: 2
              size: 1
            - name: egress2
              buffer-pool: egress_lossless_pool
              static-threshold: 4
              size: 2
          buffer-profile-ingress:
            - name: ingress1
              buffer-pool: ingress_default_lossy_pool
              dynamic-threshold: 3
              size: 5
              headroom: 6
              xon: 7
            - name: ingress2
              buffer-pool: ingress_lossless_pool
              dynamic-threshold: 3
              headroom: 8
              xon: 9
        state: merged

# After state:
# ------------
#
# Celestica-DS1000# show running-config qos buffer-mgmt
# !
# qos buffer-mgmt enable
# Celestica-DS1000#
# Celestica-DS1000# show running-config qos buffer-profile
# !
# qos buffer-profile egress profile-name default_egress_profile buffer-pool egress_default_lossy_pool dynamic-threshold 1
# !
# qos buffer-profile ingress profile-name default_ingress_profile buffer-pool ingress_default_lossy_pool static-threshold 0 headroom 0 xon 0
# !
# qos buffer-profile egress profile-name egress1 buffer-pool egress_default_lossy_pool dynamic-threshold 2 size 1
# !
# qos buffer-profile egress profile-name egress2 buffer-pool egress_lossless_pool static-threshold 4 size 2
# !
# qos buffer-profile egress profile-name egress3 buffer-pool egress_lossless_pool dynamic-threshold 5 size 13
# !
# qos buffer-profile ingress profile-name ingress1 buffer-pool ingress_default_lossy_pool dynamic-threshold 3 headroom 6 size 5 xon 7
# !
# qos buffer-profile ingress profile-name ingress2 buffer-pool ingress_lossless_pool dynamic-threshold 3 headroom 8 xon 9
# Celestica-DS1000#


# Using state : merged
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config interface Ethernet 0
# !
# interface Ethernet 0
#  buffer-queue-profile name egress3 queue-id 1
# Celestica-DS1000#
# Celestica-DS1000# show running-config interface Ethernet 1
# !
# interface Ethernet 1
# Celestica-DS1000#
#
# Play:
# ----
#

    - name: Merge QoS Buffer-Interface Configuration
      celestica.sonic.qos_buffer:
        config:
          interface:
            - name: Ethernet0
              priority-group-profile:
                - name: ingress2
                  group: 7
                - name: ingress1
                  group: 4
              buffer-queue-profile:
                - name: egress2
                  queue: 5
                - name: egress1
                  queue: 2
              priority-flow-control:
                - group: 3
                  mode:  enable
            - name: Ethernet1
              priority-group-profile:
                - name: ingress2
                  group: 6
                - name: ingress1
                  group: 5
        state: merged

# After state:
# ------------
#
# Celestica-DS1000# show running-config interface Ethernet 0
# !
# interface Ethernet 0
#  buffer-pg-profile name ingress1 priority-group 4
#  buffer-pg-profile name ingress2 priority-group 7
#  buffer-queue-profile name egress1 queue-id 2
#  buffer-queue-profile name egress2 queue-id 5
#  priority-flow-control mode enable 3
# Celestica-DS1000# show running-config interface Ethernet 1
# !
# interface Ethernet 1
#  buffer-pg-profile name ingress1 priority-group 5
#  buffer-pg-profile name ingress2 priority-group 6
# Celestica-DS1000#


# Using state : deleted
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config qos buffer-profile
# !
# qos buffer-profile egress profile-name default_egress_profile buffer-pool egress_default_lossy_pool dynamic-threshold 1
# !
# qos buffer-profile ingress profile-name default_ingress_profile buffer-pool ingress_default_lossy_pool static-threshold 0 headroom 0 xon 0
# !
# qos buffer-profile egress profile-name egress1 buffer-pool egress_default_lossy_pool dynamic-threshold 2 size 1
# !
# qos buffer-profile egress profile-name egress2 buffer-pool egress_lossless_pool static-threshold 4 size 2
# !
# qos buffer-profile egress profile-name egress3 buffer-pool egress_lossless_pool dynamic-threshold 5 size 13
# !
# qos buffer-profile ingress profile-name ingress1 buffer-pool ingress_default_lossy_pool dynamic-threshold 3 headroom 6 size 5 xon 7
# !
# qos buffer-profile ingress profile-name ingress2 buffer-pool ingress_lossless_pool dynamic-threshold 3 headroom 8 xon 9
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Delete QoS Buffer Configuration
      celestica.sonic.qos_buffer:
        config:
          buffer-profile-egress:
            - name: egress2
          buffer-profile-ingress:
            - name: ingress2
        state: deleted

# After state:
# ------------
#
# Celestica-DS1000# show running-config qos buffer-profile
# !
# qos buffer-profile egress profile-name default_egress_profile buffer-pool egress_default_lossy_pool dynamic-threshold 1
# !
# qos buffer-profile ingress profile-name default_ingress_profile buffer-pool ingress_default_lossy_pool static-threshold 0 headroom 0 xon 0
# !
# qos buffer-profile egress profile-name egress1 buffer-pool egress_default_lossy_pool dynamic-threshold 2 size 1
# !
# qos buffer-profile egress profile-name egress3 buffer-pool egress_lossless_pool dynamic-threshold 5 size 13
# !
# qos buffer-profile ingress profile-name ingress1 buffer-pool ingress_default_lossy_pool dynamic-threshold 3 headroom 6 size 5 xon 7
# Celestica-DS1000#


# Using state : deleted
#
# Before state:
# -------------
# Celestica-DS1000# show running-config interface Ethernet 0
# !
# interface Ethernet 0
#  buffer-pg-profile name ingress1 priority-group 4
#  buffer-pg-profile name ingress2 priority-group 7
#  buffer-queue-profile name egress1 queue-id 2
#  buffer-queue-profile name egress2 queue-id 5
#  priority-flow-control mode enable 3
# Celestica-DS1000# show running-config interface Ethernet 1
# !
# interface Ethernet 1
#  buffer-pg-profile name ingress1 priority-group 5
#  buffer-pg-profile name ingress2 priority-group 6
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Delete QoS Buffer-Interface Configuration
      celestica.sonic.qos_buffer:
        config:
          interface:
            - name: Ethernet0
              priority-group-profile:
                - name: ingress2
                  group: 7
              buffer-queue-profile:
                - name: egress2
                  queue: 5
              priority-flow-control:
                - group: 3
                  mode:  enable
            - name: Ethernet1
              priority-group-profile:
                - name: ingress2
                  group: 6
        state: deleted

# After state:
# ------------
#
# Celestica-DS1000# show running-config interface Ethernet 0
# !
# interface Ethernet 0
#  buffer-pg-profile name ingress1 priority-group 4
#  buffer-queue-profile name egress1 queue-id 2
# Celestica-DS1000# show running-config interface Ethernet 1
# !
# interface Ethernet 1
#  buffer-pg-profile name ingress1 priority-group 5
# Celestica-DS1000#


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.argspec.qos_buffer.qos_buffer import Qos_bufferArgs
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.config.qos_buffer.qos_buffer import Qos_buffer


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Qos_bufferArgs.argument_spec,
                           supports_check_mode=True)

    result = Qos_buffer(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
