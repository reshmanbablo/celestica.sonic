#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2024 Celestica Inc. All Rights Reserved.
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for route_map
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: route_map
version_added: 1.0.0
short_description: Resource module to configure route map.
description:
  - This module configures and manages route map on devices running Celestica SONiC NOS.
author: Celestica SONiC Ansible Team (@dharmaraj-gurusamy)
notes:
  - Tested against Advanced Celestica SONiC, release 2.0.
  - This module works with connection C(network_cli).
options:
  config:
    description:
      - A dictionary of route map configurations.
    type: dict
    suboptions:
      route-map:
        description:
          - List of route-map configuration
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Route map name
            type: str
            required: true
          action:
            description:
              - Route map action.
            type: str
            choices: [deny, permit]
            required: true
          seq:
            description:
              - Sequence to insert into route-map entry. Range is 1-65535.
            type: int
            required: true
          call:
            description:
              - Jump to another route map after match+set
            type: str
          # Match configuration
          match:
            description:
              - Match configuration from routing table
            type: dict
            suboptions:
              as-path:
                description:
                  - Name of the configured BGP AS path to be checked for.
                type: str
              community:
                description:
                  - Name of the configured BGP "community" to be checked for.
                  - Range of community list number is 1-99 (standard) , 100-500 (expanded range).
                type: str
              community-exact-match:
                description:
                  - Represents whether to perform exact match of not for BGP "community".
                type: bool
              extended-community:
                description:
                  - Name of the configured BGP "community" to be checked for.
                  - Range of community list number is 1-99 (standard) , 100-500 (expanded range).
                type: str
              interface:
                description:
                  - Next hop interface name (type and number) to be checked for.
                type: str
              # Match IPv4 config
              ip:
                description:
                  - IPv4 addresses or IP next hops to be checked for a match with the target node.
                type: dict
                suboptions:
                  address:
                    description:
                      - IPv4 address options to be checked for.
                    type: dict
                    suboptions:
                      access-list:
                        description:
                          - IPv4 access list to be checked for.
                        type: str
                      access-list-number:
                        description:
                          - IPv4 access list number to be checked for.
                          - Range of access list number is 1-199 (standard) , 1300-2699 (expanded range).
                        type: str
                      prefix-list:
                        description:
                          - IPv4 prefix list to be checked for.
                        type: str
                      prefix-length:
                        description:
                          - IPv4 prefix list length to be checked for. Range is 0-32.
                        type: int
                  next-hop:
                    description:
                      - Next hop IPv4 address options to be checked for.
                    type: dict
                    suboptions:
                      access-list:
                        description:
                          - IPv4 access list to be checked for.
                        type: str
                      access-list-number:
                        description:
                          - IPv4 access list number to be checked for.
                          - Range of access list number is 1-199 (standard) , 1300-2699 (expanded range).
                        type: str
                      address:
                        description:
                          - IPv4 address to be checked for.
                        type: str
                      prefix-list:
                        description:
                          - IPv4 prefix list to be checked for.
                        type: str
                      prefix-length:
                        description:
                          - IPv4 prefix list length to be checked for. Range is 0-32
                        type: int
                      type:
                        description:
                          - Type to be checked for.
                        type: str
                        choices: [blackhole]
              # Match IPv6 config
              ipv6:
                description:
                  - IPv6 addresses or IPv6 next hops to be checked for a match with the target node.
                type: dict
                suboptions:
                  address:
                    description:
                      - IPv6 address options to be checked for.
                    type: dict
                    suboptions:
                      access-list:
                        description:
                          - IPv6 access list to be checked for.
                        type: str
                      prefix-list:
                        description:
                          - IPv6 prefix list to be checked for.
                        type: str
                      prefix-length:
                        description:
                          - IPv6 prefix list length to be checked for. Range is 0-128.
                        type: int
                  next-hop:
                    description:
                      - Next hop IPv6 address options to be checked for.
                    type: dict
                    suboptions:
                      address:
                        description:
                          - IPv6 address to be checked for.
                        type: str
                      type:
                        description:
                          - Type to be checked for.
                        type: str
                        choices: [blackhole]

              large-community:
                description:
                  - Name of the configured BGP large "community" to be checked for.
                  - Range of community list number is 1-99 (standard) , 100-500 (expanded range).
                type: str
              large-community-exact-match:
                description:
                  - Represents whether to perform exact match of not for BGP large "community".
                type: bool
              local-preference:
                description:
                  - Local preference to be checked for. Range is 0-4294967295.
                type: int
              metric:
                description:
                  - Metric to be checked for. Range is 0-4294967295.
                type: int
              origin:
                description:
                  - Origin to be checked for.
                type: str
                choices: [egp, igp, incomplete]
              peer:
                description:
                  - Peer to be checked for
                  - IPv4 address, IPv6 address, Interface name and 'local' are allowed
                type: str
              source-instance:
                description:
                  - Source instance to be checked for. Range is 0-255.
                type: int
              source-protocol:
                description:
                  - Source protocol to be checked for.
                type: str
                choices: [bgp, connected, kernel, ospf, ospf6, static, table]
              source-vrf:
                description:
                  - Source VRF name to be checked for.
                  - VRF name, shall be prefixed with 'Vrf' pattern. Maximum of 15 characters.
                type: str
              tag:
                description:
                  - Tag value to be checked for. Range is 1-4294967295.
                type: int

          # On-Match configuration
          on-match:
            description:
              - On-Match action configuration
            type: dict
            suboptions:
              goto:
                description:
                  - Goto Clause number. Range is 1-65535.
                type: int
              next:
                description:
                  - Next clause.
                type: bool

          # # Optimization configuration
          # optimization:
          #   description:
          #     - Optimization configuration option.
          #   type: bool

          # Set configuration
          set:
            description:
              - Information to set into a matching route for re-distribution
            type: dict
            suboptions:
              aggregator:
                description:
                  - Aggregator configuration to be set into a matching route.
                type: dict
                suboptions:
                  asn-number:
                    description:
                      - AS number of aggregator to be set. Range is 1-4294967295.
                    type: str
                  ip-addr:
                    description:
                      - IPv4 address of aggregator to be set.
                    type: str
              as-path:
                description:
                  - AS path configuration to be set into a matching route.
                type: dict
                suboptions:
                  exclude:
                    description:
                      - AS number to be excluded from as-path. Comma separated AS number allowed.
                    type: str
                  prepend:
                    description:
                      - AS number to be prepended with as-path. Comma separated AS number allowed.
                    type: str
              atomic-aggregate:
                description:
                  - BGP atomic aggregate configuration option.
                type: bool
              delete-community-list:
                description:
                  - BGP community list for deletion.
                  - Community list number and name are allowed.
                  - Range of community list number is 1-99 (standard) , 100-500 (expanded range).
                type: str
              community-list:
                description:
                  - BGP community list to be set.
                  - Comma separated AA:NN or keyword community name
                  # - 'none' indicates 'No large community' configuraion
                type: str
              community-list-additive:
                description:
                  - BGP community attribute to be added.
                type: bool
              distance:
                description:
                  - BGP administrative distance to be set. Range is 0-255.
                type: int
              ext-community:
                description:
                  - BGP extended community configuration to be set into a matching route.
                type: dict
                suboptions:
                  bandwidth:
                    description:
                      - Link bandwidth extended community configuration.
                      - Range 1-25600 is allowed when configured as value
                      # - 'cumulative' indicates 'Cumulative bandwidth of all multipaths (outbound-only)'
                      # - 'num-multipaths' indicates 'Internally computed bandwidth based on number of multipaths (outbound-only)'
                    type: str
                  non-transitive:
                    description:
                      - Option to enable non-transitive.
                    type: bool
                  rt:
                    description:
                      - Route Target extended community number in the format ASN:NN or IP-ADDRESS:NN.
                    type: str
                  soo:
                    description:
                      - Site-of-Origin extended community number in the format ASN:NN or IP-ADDRESS:NN.
                    type: str
              forwarding-address:
                description:
                  - Forwading IPv6 address to be set.
                type: str
              ipv4-next-hop:
                description:
                  - IPv4 next hop configuration to be set into a matching route.
                type: dict
                suboptions:
                  address:
                    description:
                      - IPv4 address to be set.
                    type: str
                  peer-address:
                    description:
                      - Option to use peer address (for BGP only).
                    type: bool
                  unchanged:
                    description:
                      - Option to not to modify existing next hop address.
                    type: bool
              ipv4-vpn-next-hop:
                description:
                  - IPv4 VPN next-hop address to be set.
                type: str
              ipv6-next-hop:
                description:
                  - IPv6 next hop configuration to be set into a matching route.
                type: dict
                suboptions:
                  global-address:
                    description:
                      - Global IPv6 address to be set.
                    type: str
                  local-address:
                    description:
                      - Local IPv6 address to be set.
                    type: str
                  peer-address:
                    description:
                      - Option to use peer address (for BGP only).
                    type: bool
                  prefer-global:
                    description:
                      - Option to prefer global over link-local if both exist.
                    type: bool
              ipv6-vpn-next-hop:
                description:
                  - IPv6 VPN next-hop address to be set.
                type: str
              delete-large-community-list:
                description:
                  - BGP large community list for deletion.
                  - Community list number and name are allowed.
                  - Range of community list number is 1-99 (standard) , 100-500 (expanded range).
                type: str
              large-community-list:
                description:
                  - BGP large community list to be set.
                  - Comma separated AA:NN or keyword community name
                  # - 'none' indicates 'No large community' configuraion
                type: str
              large-community-list-additive:
                description:
                  - BGP large community attribute to be added.
                type: bool
              local-preference:
                description:
                  - BGP local preference path attribute to be set. Range is (+/-) (0-4294967295).
                type: str
              metric:
                description:
                  - Metric to be set. Metric value range is (+/-) (0-4294967295).
                type: str
              metric-type:
                description:
                  - Metric type to be set.
                type: str
                choices: [type-1, type-2]
              origin:
                description:
                  - Origin to be set.
                type: str
                choices: [egp, igp, incomplete]
              originator-id:
                description:
                  - Originator ID (IPv4 address) to be set.
                type: str
              source-address:
                description:
                  - Source address (IPv4 or IPv6) to be set.
                type: str
              table:
                description:
                  - Export route to non-main kernel table to be set. Range is 1-4294967295.
                type: int
              tag:
                description:
                  - Tag value to be set. Range is 1-4294967295.
                type: int
              weight:
                description:
                  - Weight of the route to be set. Range is 0-4294967295.
                type: int

  state:
    description:
      - The state of the configuration after module completion.
      - C(merged) - Merge specified configuration with on-device running configuration.
      - C(deleted) - Delete the specified on-device running configuration or applies the default value.
    type: str
    choices:
      - merged
      - deleted
    default: merged
"""
EXAMPLES = """
# Using state : merged
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config
# !
# route-map route_map3 permit 4
# exit
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Merge Route Map Configuration
      celestica.sonic.route_map:
        config:
          route-map:
            - name: route_map1
              action: permit
              seq: 1
              match:
                as-path: acl_test1
                community: 2
                community-exact-match: true
                extended-community: 100
                interface: Ethernet0
                ip:
                  address:
                    prefix-list: prefix_list1
                    prefix-length: 3
                  next-hop:
                    address: 2.2.2.2
                    prefix-list: prefix_list2
                    prefix-length: 4
                    type: blackhole
                ipv6:
                  address:
                    prefix-list: prefix_listv6_1
                    prefix-length: 33
                  next-hop:
                    type: blackhole
                large-community: 22
                large-community-exact-match: true
                local-preference: 2
                metric: 22
                origin: egp
                peer: 1::1
                source-instance: 222
                source-protocol: bgp
                source-vrf: Vrf1
                tag: 2222
              set:
                community-list: none
                ext-community:
                  bandwidth: 2
                  non-transitive: true
                  rt: "11:22"
                  soo: "22:33"
                ipv4-next-hop:
                  peer-address: true
                large-community-list: "11:22:33"
                large-community-list-additive: true
            - name: route_map2
              action: deny
              seq: 2
              call: r4
              set:
                aggregator:
                  asn-number: 5
                  ip-addr: 3.3.3.3
                as-path:
                  exclude: 7
                  prepend: 8
                atomic-aggregate: true
                community-list: "1:2"
                community-list-additive: true
                distance: 7
                forwarding-address: 66::77
                ipv4-next-hop:
                  unchanged: true
                ipv4-vpn-next-hop: 8.8.8.8
                ipv6-next-hop:
                  global-address: 66::77
                  peer-address: true
                  prefer-global: true
                ipv6-vpn-next-hop: 88::99
                large-community-list: none
                local-preference: 9
                metric: 3
                metric-type: type-2
                origin: igp
                originator-id: 5.5.5.5
                source-address: 10.9.9.9
                table: 55
                tag: 7
                weight: 88
            - name: route_map3
              action: permit
              seq: 4
              on-match:
                next: true
        state: merged


# After state:
# ------------
#
# Celestica-DS1000# show running-config
# !
# route-map route_map3 permit 4
#  on-match next
# exit
# !
# route-map route_map1 permit 1
#  match as-path acl_test1
#  match community 2 exact-match
#  match extcommunity 100
#  match interface Ethernet0
#  match ip address prefix-len 3
#  match ip address prefix-list prefix_list1
#  match ip next-hop address 2.2.2.2
#  match ip next-hop prefix-len 4
#  match ip next-hop prefix-list prefix_list2
#  match ip next-hop type blackhole
#  match ipv6 address prefix-len 33
#  match ipv6 address prefix-list prefix_listv6_1
#  match ipv6 next-hop type blackhole
#  match large-community 22 exact-match
#  match local-preference 2
#  match metric 22
#  match origin egp
#  match peer 1::1
#  match source-instance 222
#  match source-protocol bgp
#  match source-vrf Vrf1
#  match tag 2222
#  set community none
#  set extcommunity bandwidth 2 non-transitive
#  set extcommunity rt 11:22
#  set extcommunity soo 22:33
#  set ip next-hop peer-address
#  set large-community 11:22:33 additive
# exit
# !
# route-map route_map2 deny 2
#  call r4
#  set aggregator as 5 3.3.3.3
#  set as-path exclude 7
#  set as-path prepend 8
#  set atomic-aggregate
#  set community 1:2 additive
#  set distance 7
#  set forwarding-address 66::77
#  set ip next-hop unchanged
#  set ipv4 vpn next-hop 8.8.8.8
#  set ipv6 next-hop global 66::77
#  set ipv6 next-hop peer-address
#  set ipv6 next-hop prefer-global
#  set ipv6 vpn next-hop 88::99
#  set large-community none
#  set local-preference 9
#  set metric 3
#  set metric-type type-2
#  set origin igp
#  set originator-id 5.5.5.5
#  set src 10.9.9.9
#  set table 55
#  set tag 7
#  set weight 88
# exit
# Celestica-DS1000#


# Using state : deleted
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config
# !
# route-map route_map3 permit 4
#  on-match next
# exit
# !
# route-map route_map1 permit 1
#  match as-path acl_test1
#  match community 2 exact-match
#  match extcommunity 100
#  match interface Ethernet0
#  match ip address prefix-len 3
#  match ip address prefix-list prefix_list1
#  match ip next-hop address 2.2.2.2
#  match ip next-hop prefix-len 4
#  match ip next-hop prefix-list prefix_list2
#  match ip next-hop type blackhole
#  match ipv6 address prefix-len 33
#  match ipv6 address prefix-list prefix_listv6_1
#  match ipv6 next-hop type blackhole
#  match large-community 22 exact-match
#  match local-preference 2
#  match metric 22
#  match origin egp
#  match peer 1::1
#  match source-instance 222
#  match source-protocol bgp
#  match source-vrf Vrf1
#  match tag 2222
#  set community none
#  set extcommunity bandwidth 2 non-transitive
#  set extcommunity rt 11:22
#  set extcommunity soo 22:33
#  set ip next-hop peer-address
#  set large-community 11:22:33 additive
# exit
# !
# route-map route_map2 deny 2
#  call r4
#  set aggregator as 5 3.3.3.3
#  set as-path exclude 7
#  set as-path prepend 8
#  set atomic-aggregate
#  set community 1:2 additive
#  set distance 7
#  set forwarding-address 66::77
#  set ip next-hop unchanged
#  set ipv4 vpn next-hop 8.8.8.8
#  set ipv6 next-hop global 66::77
#  set ipv6 next-hop peer-address
#  set ipv6 next-hop prefer-global
#  set ipv6 vpn next-hop 88::99
#  set large-community none
#  set local-preference 9
#  set metric 3
#  set metric-type type-2
#  set origin igp
#  set originator-id 5.5.5.5
#  set src 10.9.9.9
#  set table 55
#  set tag 7
#  set weight 88
# exit
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Delete Route Map Configuration
      celestica.sonic.route_map:
        config:
          route-map:
            - name: route_map1
              action: permit
              seq: 1
              match:
                as-path: acl_test1
                community: 2
                community-exact-match: true
                extended-community: 100
                interface: Ethernet0
                ip:
                  address:
                    prefix-list: prefix_list1
                    prefix-length: 3
                  next-hop:
                    address: 2.2.2.2
                    prefix-list: prefix_list2
                    prefix-length: 4
                    type: blackhole
                ipv6:
                  address:
                    prefix-list: prefix_listv6_1
                    prefix-length: 33
                  next-hop:
                    type: blackhole
                large-community: 22
                large-community-exact-match: true
                local-preference: 2
                metric: 22
                origin: egp
                peer: 1::1
                source-instance: 222
                source-protocol: bgp
                tag: 2222
              set:
                community-list: none
                ext-community:
                  bandwidth: 2
                  non-transitive: true
                  rt: "11:22"
                  soo: "22:33"
                ipv4-next-hop:
                  peer-address: true
            - name: route_map2
              action: deny
              seq: 2
              call: r4
              set:
                aggregator:
                  asn-number: 5
                  ip-addr: 3.3.3.3
                as-path:
                  exclude: 7
                  prepend: 8
                atomic-aggregate: true
                distance: 7
                ipv4-next-hop:
                  unchanged: true
                ipv4-vpn-next-hop: 8.8.8.8
                ipv6-next-hop:
                  peer-address: true
                  prefer-global: true
                ipv6-vpn-next-hop: 88::99
                large-community-list: none
                local-preference: 9
                metric: 3
                metric-type: type-2
                origin: igp
                originator-id: 5.5.5.5
                source-address: 10.9.9.9
                table: 55
                tag: 7
                weight: 88
            - name: route_map3
              action: permit
              seq: 4
        state: deleted

# After state:
# ------------
#
# Celestica-DS1000# show running-config
# !
# route-map route_map1 permit 1
#  match source-vrf Vrf1
#  set large-community 11:22:33 additive
# exit
# !
# route-map route_map2 deny 2
#  set community 1:2 additive
#  set forwarding-address 66::77
#  set ipv6 next-hop global 66::77
# exit
# Celestica-DS1000#


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.argspec.route_map.route_map import Route_mapArgs
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.config.route_map.route_map import Route_map


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Route_mapArgs.argument_spec,
                           supports_check_mode=True)

    result = Route_map(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
