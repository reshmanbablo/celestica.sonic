#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2024 Celestica Inc. All Rights Reserved.
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for access_list_mac
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: access_list_mac
version_added: 1.0.0
short_description: Resource module to configure MAC access list.
description:
  - This module configures and manages MAC access list on devices running Celestica SONiC NOS.
author: Celestica SONiC Ansible Team (@dharmaraj-gurusamy)
notes:
  - Tested against Advanced Celestica SONiC, release 2.0.
  - This module works with connection C(network_cli).
options:
  config:
    description:
      - A dictionary of MAC access list configurations.
    type: dict
    suboptions:
      # MAC access-list config
      access-list:
        description:
          - MAC access list configuration
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Access list name
            type: str
            required: true
          # Sequence numbers under MAC access-list config
          sequence-numbers:
            description:
              - Seqeuce number under access list configuration
            type: list
            # TODO: Add required_if for any options vs src-addr, src-mask & dst-adr & dst-mask combinations
            elements: dict
            suboptions:
              seq:
                description:
                  - Sequence number. Range is 1-65535.
                type: int
                required: true
              action:
                description:
                  - Packet action.
                type: str
                choices: [deny, permit]
              ethertype:
                description:
                  - Ethertype value or name.
                type: str
                choices: ["0x0800", "0x0806", "0x86dd", "0x8847", "0x88cc", "0x8915", arp, ip, ipv6]
              src-addr-any:
                description:
                  - Indicates any source MAC address.
                type: bool
              src-addr:
                description:
                  - Source MAC address.
                type: str
              src-mask:
                description:
                  - Source MAC mask address.
                type: str
              dst-addr-any:
                description:
                  - Indicates any destination MAC address.
                type: bool
              dst-addr:
                description:
                  - Destination MAC address.
                type: str
              dst-mask:
                description:
                  - Destination MAC mask address.
                type: str

      # MAC access-list binding to interfaces
      interface:
        description:
          - MAC access list binding to interfaces.
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Full name of the interface, i.e. Ethernet0, PortChannel10, Vlan10.
              - Ethernet, PortChannel and Vlan interfaces are allowed.
            type: str
            required: true
          access-group:
            description:
              - MAC access list binding to interfaces.
            type: list
            elements: dict
            suboptions:
              access-list:
                description:
                  - Access list name.
                type: str
              direction:
                description:
                  - Direction in which access-list to be applied.
                type: str
                choices: [in, out]

  state:
    description:
      - The state of the configuration after module completion.
      - C(merged) - Merge specified configuration with on-device running configuration.
      - C(deleted) - Delete the specified on-device running configuration or applies the default value.
    type: str
    choices:
      - merged
      - deleted
    default: merged
"""
EXAMPLES = """
# Using state : merged
#
# Before state:
# -------------
#
# Celestica-DS1000# show running-config mac access-list
# !
# mac access-list mac_acl1
#  sequence 1 permit 00:00:60:00:00:00 00:00:ff:ff:00:00 any 0x8915
# !
# interface Ethernet 0
#  mac access-group mac_acl1 in
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Merge Access List MAC Configuration
      celestica.sonic.access_list_mac:
        config:
          access-list:
            - name: mac_acl1
              sequence-numbers:
                - seq: 2
                  action: permit
                  ethertype: arp
                  src-addr-any: true
                  dst-addr-any: true
                - seq: 3
                  action: deny
                  ethertype: ip
                  src-addr-any: true
                  dst-addr: 00:00:40:00:00:00
                  dst-mask: 00:00:ff:ff:00:00
            - name: mac_acl2
              sequence-numbers:
                - seq: 1
                  action: permit
                  ethertype: "0x88cc"
                  src-addr: 00:00:10:00:00:00
                  src-mask: 00:00:ff:ff:00:00
                  dst-addr: 00:00:20:00:00:00
                  dst-mask: 00:00:ff:ff:00:00
                - seq: 2
                  action: deny
                  ethertype: ip
                  src-addr: 00:00:30:00:00:00
                  src-mask: 00:00:ff:ff:00:00
                  dst-addr-any: true
        state: merged

    - name: Merge MAC Access List and Interface Binding Configuration
      celestica.sonic.access_list_mac:
        config:
          interface:
            - name: Ethernet0
              access-group:
                - access-list: mac_acl2
                  direction: out
            - name: Vlan101
              access-group:
                - access-list: mac_acl1
                  direction: in
                - access-list: mac_acl2
                  direction: out
            - name: PortChannel1
              access-group:
                - access-list: mac_acl1
                  direction: in
        state: merged


# After state:
# ------------
#
# Celestica-DS1000# show running-config mac access-list
# !
# mac access-list mac_acl1
#  sequence 1 permit 00:00:60:00:00:00 00:00:ff:ff:00:00 any 0x8915
#  sequence 2 permit any any arp
#  sequence 3 deny any 00:00:40:00:00:00 00:00:ff:ff:00:00 ip
# !
# mac access-list mac_acl2
#  sequence 1 permit 00:00:10:00:00:00 00:00:ff:ff:00:00 00:00:20:00:00:00 00:00:ff:ff:00:00 0x88cc
#  sequence 2 deny 00:00:30:00:00:00 00:00:ff:ff:00:00 any ip
# !
# interface Ethernet 0
#  mac access-group mac_acl1 in
#  mac access-group mac_acl2 out
# !
# interface PortChannel 1
#  mac access-group mac_acl1 in
# !
# interface Vlan 101
#  mac access-group mac_acl1 in
#  mac access-group mac_acl2 out
# Celestica-DS1000#


# Using state : deleted
#
# Before state:
# -------------
# Celestica-DS1000# show running-config mac access-list
# !
# mac access-list mac_acl1
#  sequence 1 permit 00:00:60:00:00:00 00:00:ff:ff:00:00 any 0x8915
#  sequence 2 permit any any arp
#  sequence 3 deny any 00:00:40:00:00:00 00:00:ff:ff:00:00 ip
# !
# mac access-list mac_acl2
#  sequence 1 permit 00:00:10:00:00:00 00:00:ff:ff:00:00 00:00:20:00:00:00 00:00:ff:ff:00:00 0x88cc
#  sequence 2 deny 00:00:30:00:00:00 00:00:ff:ff:00:00 any ip
# !
# interface Ethernet 0
#  mac access-group mac_acl1 in
#  mac access-group mac_acl2 out
# !
# interface PortChannel 1
#  mac access-group mac_acl1 in
# !
# interface Vlan 101
#  mac access-group mac_acl1 in
#  mac access-group mac_acl2 out
# Celestica-DS1000#
#
# Play:
# ----
#
    - name: Delete Access List MAC Configuration
      celestica.sonic.access_list_mac:
        config:
          access-list:
            - name: mac_acl1
              sequence-numbers:
                - seq: 2
                - seq: 3
            - name: mac_acl2
        state: deleted

    - name: Delete MAC Access List and Interface Binding Configuration
      celestica.sonic.access_list_mac:
        config:
          interface:
            - name: Ethernet0
              access-group:
                - access-list: mac_acl1
                  direction: in
            - name: Vlan101
              access-group:
                - access-list: mac_acl1
                  direction: in
        state: deleted


# After state:
# ------------
#
# Celestica-DS1000# show running-config mac access-list
# !
# mac access-list mac_acl1
#  sequence 1 permit 00:00:60:00:00:00 00:00:ff:ff:00:00 any 0x8915
# !
# interface PortChannel 1
#  mac access-group mac_acl1 in
# Celestica-DS1000#


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.argspec.access_list_mac.access_list_mac import Access_list_macArgs
from ansible_collections.celestica.sonic.plugins.module_utils.network.sonic.config.access_list_mac.access_list_mac import Access_list_mac


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Access_list_macArgs.argument_spec,
                           supports_check_mode=True)

    result = Access_list_mac(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
